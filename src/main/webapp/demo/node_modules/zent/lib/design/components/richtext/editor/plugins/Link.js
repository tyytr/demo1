'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

exports['default'] = function (options) {
  var form = void 0;
  var closeDialog = void 0;

  var onConfirm = function onConfirm() {
    return new Promise(function (resolve, reject) {
      form.submit();
      if (form.isValid()) {
        var formValues = form.getFormValues();
        var linkUrl = formValues.linkUrl;
        var reg = /^tel:/;
        var cheackURl = /(:\s*\/\/|tel:)/.test(formValues.linkUrl);

        // 包含http,ftp,file开头的地址，直接引用
        if (!cheackURl) {
          _notify2['default'].success('您输入的超链接中不包含http等协议名称，默认将为您添加http://前缀');
          linkUrl = 'http://' + linkUrl;
        }
        var urlInfo = {
          target: reg.test(linkUrl) ? '' : '_blank',
          href: linkUrl,
          textValue: linkUrl
        };
        options.callback(urlInfo);
        resolve();
      } else {
        reject();
      }
    });
  };

  var onPressEnter = function onPressEnter() {
    onConfirm().then(function () {
      closeDialog();
    })['catch'](function () {
      /* no nothing */
    });
  };

  closeDialog = _sweetalert2['default'].confirm({
    className: 'zent-design-component-richtext__link',
    title: '超链接',
    content: _react2['default'].createElement(LinkForm, { onPressEnter: onPressEnter, ref: function ref(f) {
        return form = f;
      } }),
    onConfirm: onConfirm
  });
};

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _form = require('../../../../../form');

var _form2 = _interopRequireDefault(_form);

var _sweetalert = require('../../../../../sweetalert');

var _sweetalert2 = _interopRequireDefault(_sweetalert);

var _notify = require('../../../../../notify');

var _notify2 = _interopRequireDefault(_notify);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var createForm = _form2['default'].createForm,
    Field = _form2['default'].Field,
    InputField = _form2['default'].InputField;


var LinkForm = createForm({})(function (_React$Component) {
  (0, _inherits3['default'])(LinkFromImpl, _React$Component);

  function LinkFromImpl() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3['default'])(this, LinkFromImpl);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3['default'])(this, (_ref = LinkFromImpl.__proto__ || Object.getPrototypeOf(LinkFromImpl)).call.apply(_ref, [this].concat(args))), _this), _this.onPressEnter = function (evt) {
      evt.preventDefault();
      _this.props.onPressEnter();
    }, _temp), (0, _possibleConstructorReturn3['default'])(_this, _ret);
  }

  (0, _createClass3['default'])(LinkFromImpl, [{
    key: 'render',
    value: function render() {
      return _react2['default'].createElement(
        'div',
        { className: 'share-content' },
        _react2['default'].createElement(
          _form2['default'],
          { horizontal: true },
          _react2['default'].createElement(Field, {
            name: 'linkUrl',
            label: '\u94FE\u63A5\u5730\u5740',
            validations: {
              required: true
            },
            validationErrors: {
              required: '链接地址不能为空'
            },
            onPressEnter: this.onPressEnter,
            autoFocus: true,
            component: InputField
          }),
          ' '
        ),
        ' '
      );
    }
  }]);
  return LinkFromImpl;
}(_react2['default'].Component));