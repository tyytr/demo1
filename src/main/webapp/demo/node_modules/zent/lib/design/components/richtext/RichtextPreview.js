'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var emptyRichtext = '<p>点此编辑『富文本』内容 ——&gt;</p><p>你可以对文字进行<strong>加粗</strong>、<em>斜体</em>、<span style="text-decoration: underline;">下划线</span>、<span style="text-decoration: line-through;">删除线</span>、文字<span style="color: rgb(0, 176, 240);">颜色</span>、<span style="background-color: rgb(255, 192, 0); color: rgb(255, 255, 255);">背景色</span>、以及字号<span style="font-size: 20px;">大</span><span style="font-size: 14px;">小</span>等简单排版操作。</p><p>还可以在这里加入表格了</p><table><tbody><tr><td width="93" valign="top" style="word-break: break-all;">中奖客户</td><td width="93" valign="top" style="word-break: break-all;">发放奖品</td><td width="93" valign="top" style="word-break: break-all;">备注</td></tr><tr><td width="93" valign="top" style="word-break: break-all;">猪猪</td><td width="93" valign="top" style="word-break: break-all;">内测码</td><td width="93" valign="top" style="word-break: break-all;"><em><span style="color: rgb(255, 0, 0);">已经发放</span></em></td></tr><tr><td width="93" valign="top" style="word-break: break-all;">大麦</td><td width="93" valign="top" style="word-break: break-all;">积分</td><td width="93" valign="top" style="word-break: break-all;"><a href="javascript: void(0);" target="_blank">领取地址</a></td></tr></tbody></table>';

var RichtextPreview = function (_Component) {
  (0, _inherits3['default'])(RichtextPreview, _Component);

  function RichtextPreview() {
    (0, _classCallCheck3['default'])(this, RichtextPreview);
    return (0, _possibleConstructorReturn3['default'])(this, (RichtextPreview.__proto__ || Object.getPrototypeOf(RichtextPreview)).apply(this, arguments));
  }

  (0, _createClass3['default'])(RichtextPreview, [{
    key: 'render',
    value: function render() {
      var value = this.props.value;

      var content = value.content || emptyRichtext;
      var fullscreen = value.fullscreen,
          color = value.color;


      return _react2['default'].createElement('div', {
        dangerouslySetInnerHTML: { __html: content } // eslint-disable-line
        , className: (0, _classnames2['default'])('zent-design-component-richtext-preview', {
          'zent-design-component-richtext-preview--fullscreen': fullscreen
        }),
        style: { backgroundColor: color }
      });
    }
  }]);
  return RichtextPreview;
}(_react.Component);

RichtextPreview.propTypes = {
  value: _propTypes2['default'].object,
  design: _propTypes2['default'].object
};
exports['default'] = RichtextPreview;