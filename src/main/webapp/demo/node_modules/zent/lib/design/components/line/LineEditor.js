'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _radio = require('../../../radio');

var _radio2 = _interopRequireDefault(_radio);

var _colorpicker = require('../../../colorpicker');

var _colorpicker2 = _interopRequireDefault(_colorpicker);

var _DesignEditor2 = require('../../editor/DesignEditor');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var RadioGroup = _radio2['default'].Group;
var DEFAULT_COLOR = '#e5e5e5';

var LineEditor = function (_DesignEditor) {
  (0, _inherits3['default'])(LineEditor, _DesignEditor);

  function LineEditor() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3['default'])(this, LineEditor);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3['default'])(this, (_ref = LineEditor.__proto__ || Object.getPrototypeOf(LineEditor)).call.apply(_ref, [this].concat(args))), _this), _this.onColorChange = _this.onCustomInputChange('color'), _this.onColorReset = function () {
      _this.onColorChange(DEFAULT_COLOR);
    }, _temp), (0, _possibleConstructorReturn3['default'])(_this, _ret);
  }

  (0, _createClass3['default'])(LineEditor, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          prefix = _props.prefix,
          value = _props.value,
          showError = _props.showError,
          validation = _props.validation;


      return _react2['default'].createElement(
        'div',
        { className: prefix + '-design-component-line-editor' },
        _react2['default'].createElement(
          _DesignEditor2.ControlGroup,
          {
            label: '\u989C\u8272:',
            showError: showError || this.getMetaProperty('content', 'touched'),
            error: validation.content
          },
          _react2['default'].createElement(_colorpicker2['default'], {
            className: prefix + '-design-component-line-editor_color-select',
            color: value.color,
            onChange: this.onColorChange
          }),
          _react2['default'].createElement(
            'span',
            {
              className: prefix + '-design-component-line-editor_color-reset',
              onClick: this.onColorReset
            },
            '\u91CD\u7F6E'
          )
        ),
        _react2['default'].createElement(
          _DesignEditor2.ControlGroup,
          {
            label: '\u8FB9\u8DDD:',
            showError: showError || this.getMetaProperty('content', 'touched'),
            error: validation.content
          },
          _react2['default'].createElement(
            RadioGroup,
            { value: value.hasPadding, onChange: this.onInputChange },
            _react2['default'].createElement(
              _radio2['default'],
              { name: 'hasPadding', value: false },
              '\u65E0\u8FB9\u8DDD'
            ),
            _react2['default'].createElement(
              _radio2['default'],
              { name: 'hasPadding', value: true },
              '\u5DE6\u53F3\u7559\u8FB9'
            )
          )
        ),
        _react2['default'].createElement(
          _DesignEditor2.ControlGroup,
          {
            label: '\u6837\u5F0F:',
            showError: showError || this.getMetaProperty('content', 'touched'),
            error: validation.content
          },
          _react2['default'].createElement(
            RadioGroup,
            { value: value.lineType, onChange: this.onInputChange },
            _react2['default'].createElement(
              _radio2['default'],
              { name: 'lineType', value: 'solid' },
              '\u5B9E\u7EBF'
            ),
            _react2['default'].createElement(
              _radio2['default'],
              { name: 'lineType', value: 'dashed' },
              '\u865A\u7EBF'
            ),
            _react2['default'].createElement(
              _radio2['default'],
              { name: 'lineType', value: 'dotted' },
              '\u70B9\u7EBF'
            )
          )
        )
      );
    }
  }], [{
    key: 'getInitialValue',
    value: function getInitialValue() {
      return {
        color: DEFAULT_COLOR,
        hasPadding: false,
        lineType: 'solid'
      };
    }
  }]);
  return LineEditor;
}(_DesignEditor2.DesignEditor);

LineEditor.designType = 'line';
LineEditor.designDescription = '辅助线';
exports['default'] = LineEditor;