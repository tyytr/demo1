'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var ConfigPreview = function (_ref) {
  (0, _inherits3['default'])(ConfigPreview, _ref);

  function ConfigPreview() {
    (0, _classCallCheck3['default'])(this, ConfigPreview);
    return (0, _possibleConstructorReturn3['default'])(this, (ConfigPreview.__proto__ || Object.getPrototypeOf(ConfigPreview)).apply(this, arguments));
  }

  (0, _createClass3['default'])(ConfigPreview, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          value = _props.value,
          prefix = _props.prefix;


      return _react2['default'].createElement(
        'div',
        { className: prefix + '-design-component-config-preview' },
        _react2['default'].createElement(
          'div',
          { className: prefix + '-design-component-config-preview__title' },
          value.title
        )
      );
    }
  }]);
  return ConfigPreview;
}(_react.PureComponent || _react.Component);

ConfigPreview.propTypes = {
  value: _propTypes2['default'].object,

  // 用来和 Design 交互
  design: _propTypes2['default'].object,

  prefix: _propTypes2['default'].string
};
exports['default'] = ConfigPreview;