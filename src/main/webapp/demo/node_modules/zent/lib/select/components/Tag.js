'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var Tag = function (_ref) {
  (0, _inherits3['default'])(Tag, _ref);

  function Tag(props) {
    (0, _classCallCheck3['default'])(this, Tag);

    var _this = (0, _possibleConstructorReturn3['default'])(this, (Tag.__proto__ || Object.getPrototypeOf(Tag)).call(this, props));

    _this.deleteTagHandler = _this.deleteTagHandler.bind(_this);
    return _this;
  }

  (0, _createClass3['default'])(Tag, [{
    key: 'deleteTagHandler',
    value: function deleteTagHandler(evt) {
      evt.preventDefault();
      evt.stopPropagation();
      this.props.onDelete(this.props.cid);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          prefixCls = _props.prefixCls,
          text = _props.text;


      return _react2['default'].createElement(
        'span',
        null,
        text ? _react2['default'].createElement(
          'span',
          { className: prefixCls + '-tag' },
          text,
          _react2['default'].createElement('i', {
            className: prefixCls + '-delete',
            onClick: this.deleteTagHandler
          })
        ) : ''
      );
    }
  }]);
  return Tag;
}(_react.PureComponent || _react.Component);

Tag.propTypes = {
  prefixCls: _propTypes2['default'].string,
  cid: _propTypes2['default'].string,
  value: _propTypes2['default'].any,
  text: _propTypes2['default'].any,
  onFocus: _propTypes2['default'].func
};

exports['default'] = Tag;