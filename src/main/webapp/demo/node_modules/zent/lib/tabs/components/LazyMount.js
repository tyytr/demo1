'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * 保存domMount状态
 */
var LazyMount = function (_ref) {
  (0, _inherits3['default'])(LazyMount, _ref);

  function LazyMount(props) {
    (0, _classCallCheck3['default'])(this, LazyMount);

    var _this = (0, _possibleConstructorReturn3['default'])(this, (LazyMount.__proto__ || Object.getPrototypeOf(LazyMount)).call(this, props));

    _this.state = {
      mounted: props.mountTrigger
    };
    return _this;
  }

  (0, _createClass3['default'])(LazyMount, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var mountTrigger = nextProps.mountTrigger;
      var mounted = this.state.mounted;

      if (mountTrigger && !mounted) {
        this.setState({
          mounted: true
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var children = this.props.children;
      var mounted = this.state.mounted;

      if (mounted) {
        return children;
      }
      return null;
    }
  }]);
  return LazyMount;
}(_react.PureComponent || _react.Component);

LazyMount.propTypes = {
  mountTrigger: _propTypes2['default'].bool
};
LazyMount.defaultProps = {
  mountTrigger: false
};
exports['default'] = LazyMount;