'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.info = undefined;

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

exports.alert = alert;
exports.confirm = confirm;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _i18n = require('../i18n');

var _default = require('../i18n/default');

var _dialog = require('../dialog');

var _dialog2 = _interopRequireDefault(_dialog);

var _icon = require('../icon');

var _icon2 = _interopRequireDefault(_icon);

var _ActionButton = require('./ActionButton');

var _ActionButton2 = _interopRequireDefault(_ActionButton);

var _constants = require('./constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 * 17.12.13 从相似的 alert 与 confirm 函数中提取公共逻辑，方便 i18n 注入
 *
 * 另调整组件的文件组织结构方便维护
 */

var openDialog = _dialog2['default'].openDialog;

/**
 * sweet [main function]
 *
 * @param {object} config [config object passed by entry function]
 * @param {string} sweetType [internal type of entry function]
 * @returns {function} [close function returned by openDialog]
 */

function sweet(config, sweetType) {
  var _config$className = config.className,
      className = _config$className === undefined ? '' : _config$className,
      _config$prefix = config.prefix,
      prefix = _config$prefix === undefined ? 'zent' : _config$prefix,
      _config$confirmType = config.confirmType,
      confirmType = _config$confirmType === undefined ? 'primary' : _config$confirmType,
      _config$closeBtn = config.closeBtn,
      closeBtn = _config$closeBtn === undefined ? false : _config$closeBtn,
      _config$maskClosable = config.maskClosable,
      maskClosable = _config$maskClosable === undefined ? false : _config$maskClosable,
      title = config.title,
      type = config.type,
      content = config.content,
      onConfirm = config.onConfirm,
      onCancel = config.onCancel,
      confirmText = config.confirmText,
      cancelText = config.cancelText,
      parentComponent = config.parentComponent;

  // close 的引用地址，后续会指向函数的返回值，供 ActionButton 调用。

  var close = null;

  var renderTitle = function renderTitle(i18n) {
    var icon = _constants.TitleIconMap[type] || '';
    return _react2['default'].createElement(
      'div',
      { className: prefix + '-sweetalert-' + (type ? 'icon-' : '') + 'title' },
      type && _react2['default'].createElement(_icon2['default'], { className: prefix + '-sweetalert-type-icon', type: icon }),
      title || i18n.title
    );
  };

  var renderButtons = function renderButtons(i18n) {
    var isAlert = sweetType === 'alert';
    return _react2['default'].createElement(
      'div',
      { className: 'sweet-' + sweetType + '-actions' },
      _react2['default'].createElement(_ActionButton2['default'], {
        key: 'sweetalert-confirm',
        type: confirmType,
        className: prefix + '-sweetalert-' + sweetType + '-btn-confirm',
        getClose: function getClose() {
          return close;
        },
        onClick: onConfirm,
        text: confirmText || (isAlert ? i18n.ok : i18n.confirm)
      }),
      !isAlert && _react2['default'].createElement(_ActionButton2['default'], {
        key: 'sweetalert-cancel',
        type: 'default',
        className: prefix + '-sweetalert-' + sweetType + '-btn-cancel',
        getClose: function getClose() {
          return close;
        },
        onClick: onCancel,
        text: cancelText || i18n.cancel
      })
    );
  };

  close = openDialog({
    prefix: prefix,
    closeBtn: closeBtn,
    maskClosable: maskClosable,
    className: (0, _classnames2['default'])(prefix + '-sweetalert-' + sweetType, (0, _defineProperty3['default'])({}, className, !!className)),
    title: _react2['default'].createElement(
      _i18n.I18nReceiver,
      { componentName: 'Sweetalert', defaultI18n: _default.Sweetalert },
      renderTitle
    ),
    children: content,
    footer: _react2['default'].createElement(
      _i18n.I18nReceiver,
      { componentName: 'Sweetalert', defaultI18n: _default.Sweetalert },
      renderButtons
    ),
    parentComponent: parentComponent
  });

  return close;
}

function alert() {
  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return sweet(config, 'alert');
}

var info = exports.info = alert;

function confirm() {
  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return sweet(config, 'confirm');
}

exports['default'] = {
  alert: alert,
  info: info,
  confirm: confirm
};