'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _button = require('../button');

var _button2 = _interopRequireDefault(_button);

var _isPromise = require('../utils/isPromise');

var _isPromise2 = _interopRequireDefault(_isPromise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var ActionButton = function (_ref) {
  (0, _inherits3['default'])(ActionButton, _ref);

  function ActionButton() {
    var _ref2;

    var _temp, _this, _ret;

    (0, _classCallCheck3['default'])(this, ActionButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3['default'])(this, (_ref2 = ActionButton.__proto__ || Object.getPrototypeOf(ActionButton)).call.apply(_ref2, [this].concat(args))), _this), _this.state = {
      loading: false
    }, _this.onClick = function () {
      var _this$props = _this.props,
          callback = _this$props.onClick,
          getClose = _this$props.getClose;

      var close = getClose();

      // callback没传，直接关闭
      if (!callback) {
        return close();
      }

      var callbackHasArgs = callback.length > 0;
      var value = callbackHasArgs ? callback(close) : callback();

      // 返回值是个Promise，resolve后自动关闭
      if ((0, _isPromise2['default'])(value)) {
        _this.setState({
          loading: true
        });
        value.then(function () {
          // 马上就关闭了，没必要setState({loading: false})
          close();
        }, function () {
          _this.setState({
            loading: false
          });
        });
        return;
      }

      // callback 无参数并且返回值不是 false 的时候自动关闭
      if (!callbackHasArgs && value !== false) {
        close();
      }
    }, _temp), (0, _possibleConstructorReturn3['default'])(_this, _ret);
  }

  (0, _createClass3['default'])(ActionButton, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          type = _props.type,
          text = _props.text;
      var loading = this.state.loading;


      return _react2['default'].createElement(
        _button2['default'],
        {
          type: type,
          className: className,
          loading: loading,
          onClick: this.onClick
        },
        text
      );
    }
  }]);
  return ActionButton;
}(_react.PureComponent || _react.Component);

ActionButton.propTypes = {
  type: _propTypes2['default'].string.isRequired,
  text: _propTypes2['default'].node.isRequired,
  className: _propTypes2['default'].string.isRequired,
  getClose: _propTypes2['default'].func.isRequired,
  onClick: _propTypes2['default'].func
};
exports['default'] = ActionButton;