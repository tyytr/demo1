'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var NumberSteps = function (_ref) {
  (0, _inherits3['default'])(NumberSteps, _ref);

  function NumberSteps() {
    (0, _classCallCheck3['default'])(this, NumberSteps);
    return (0, _possibleConstructorReturn3['default'])(this, (NumberSteps.__proto__ || Object.getPrototypeOf(NumberSteps)).apply(this, arguments));
  }

  (0, _createClass3['default'])(NumberSteps, [{
    key: 'render',
    value: function render() {
      var _classNames;

      var props = this.props;
      var className = props.className,
          prefix = props.prefix,
          children = props.children,
          current = props.current,
          status = props.status;

      var lastIndex = children.length - 1;
      var classString = (0, _classnames2['default'])((_classNames = {}, (0, _defineProperty3['default'])(_classNames, prefix + '-steps', true), (0, _defineProperty3['default'])(_classNames, '' + className, true), _classNames));

      return _react2['default'].createElement(
        'div',
        { className: classString },
        _react2['default'].Children.map(children, function (item, index) {
          var np = {
            stepNumber: (index + 1).toString(),
            stepLast: index === lastIndex,
            isCurrentStep: index === current - 1,
            isLastFinishStep: status === 'error' && index === current - 2,
            prefix: prefix,
            status: 'wait'
          };

          if (!item.props.status) {
            if (index === current - 1) {
              np.status = status;
            } else if (index < current - 1) {
              np.status = 'finish';
            } else {
              np.status = 'wait';
            }
          }

          return _react2['default'].cloneElement(item, np);
        }, this)
      );
    }
  }]);
  return NumberSteps;
}(_react.PureComponent || _react.Component);

exports['default'] = NumberSteps;