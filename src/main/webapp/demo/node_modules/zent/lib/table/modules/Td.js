'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _checkbox = require('../../checkbox');

var _checkbox2 = _interopRequireDefault(_checkbox);

var _radio = require('../../radio');

var _radio2 = _interopRequireDefault(_radio);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _helper = require('../helper');

var _helper2 = _interopRequireDefault(_helper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var Td = function (_ref) {
  (0, _inherits3['default'])(Td, _ref);

  function Td() {
    var _ref2;

    var _temp, _this, _ret;

    (0, _classCallCheck3['default'])(this, Td);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3['default'])(this, (_ref2 = Td.__proto__ || Object.getPrototypeOf(Td)).call.apply(_ref2, [this].concat(args))), _this), _this.onSelect = function (e) {
      var isChecked = e.target.checked;
      var _this$props = _this.props,
          selection = _this$props.selection,
          data = _this$props.data,
          rowKey = _this$props.rowKey;


      selection.onSelect(data[rowKey], isChecked);
    }, _temp), (0, _possibleConstructorReturn3['default'])(_this, _ret);
  }

  (0, _createClass3['default'])(Td, [{
    key: 'renderContent',
    value: function renderContent() {
      var _props = this.props,
          column = _props.column,
          data = _props.data,
          pos = _props.pos;
      var name = column.name,
          _column$bodyRender = column.bodyRender,
          bodyRender = _column$bodyRender === undefined ? data[name] : _column$bodyRender;

      var isReactComponent = _helper2['default'].isReactComponent(bodyRender);

      if (typeof bodyRender === 'function') {
        var BodyRender = bodyRender;

        return isReactComponent ? _react2['default'].createElement(BodyRender, { data: data, name: name, pos: pos }) : bodyRender(data, pos, name);
      }
      return bodyRender;
    }
  }, {
    key: 'renderCheckBox',
    value: function renderCheckBox(data, rowKey, selection) {
      var needSelect = selection.needSelect,
          canSelect = selection.canSelect,
          isSingleSelection = selection.isSingleSelection;

      if (needSelect) {
        if (isSingleSelection) {
          return _react2['default'].createElement(_radio2['default'], {
            className: 'select-check',
            checked: canSelect && selection.selectedRowKeys.indexOf(data[rowKey]) !== -1,
            disabled: !canSelect,
            onChange: this.onSelect
          });
        }

        return _react2['default'].createElement(_checkbox2['default'], {
          className: 'select-check',
          checked: canSelect && selection.selectedRowKeys.indexOf(data[rowKey]) !== -1,
          disabled: !canSelect,
          onChange: this.onSelect
        });
      }

      return null;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          column = _props2.column,
          selection = _props2.selection,
          data = _props2.data,
          rowKey = _props2.rowKey;
      var textAlign = column.textAlign,
          isMoney = column.isMoney;
      var needSelect = selection.needSelect;

      var width = _helper2['default'].getCalculatedWidth(column.width);
      var className = (0, _classnames2['default'])('cell', column.className, {
        'cell--selection': needSelect,
        'cell--money': isMoney
      });

      var styleObj = {};

      if (width) {
        styleObj = {
          width: width,
          flex: '0 1 auto'
        };
      }

      if (_helper2['default'].getAlignClass(textAlign) !== '') {
        className += ' cell--' + _helper2['default'].getAlignClass(textAlign);
      }

      return _react2['default'].createElement(
        'div',
        { className: className, style: styleObj },
        this.renderCheckBox(data, rowKey, selection),
        _react2['default'].createElement(
          'div',
          { className: 'cell__child-container' },
          this.renderContent()
        )
      );
    }
  }]);
  return Td;
}(_react.PureComponent || _react.Component);

exports['default'] = Td;