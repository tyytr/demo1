'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _input = require('../input');

var _input2 = _interopRequireDefault(_input);

var _popover = require('../popover');

var _popover2 = _interopRequireDefault(_popover);

var _getWidth = require('../utils/getWidth');

var _getWidth2 = _interopRequireDefault(_getWidth);

var _i18n = require('../i18n');

var _default = require('../i18n/default');

var _YearPanel = require('./year/YearPanel');

var _YearPanel2 = _interopRequireDefault(_YearPanel);

var _PanelFooter = require('./common/PanelFooter');

var _PanelFooter2 = _interopRequireDefault(_PanelFooter);

var _utils = require('./utils');

var _constants = require('./constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function extractStateFromProps(props) {
  var showPlaceholder = void 0;
  var selected = void 0;
  var actived = void 0;
  var format = props.format,
      value = props.value,
      defaultValue = props.defaultValue;


  if (value) {
    var tmp = (0, _utils.parseDate)('' + value, format);
    if (tmp) {
      showPlaceholder = false;
      selected = actived = tmp;
    } else {
      // eslint-disable-line
      showPlaceholder = true;
      actived = (0, _utils.dayStart)();
    }
  } else {
    showPlaceholder = true;
    if (defaultValue) {
      actived = (0, _utils.parseDate)('' + defaultValue, format);
    } else {
      actived = (0, _utils.dayStart)();
    }
  }

  return {
    value: selected && (0, _utils.formatDate)(selected, format),
    actived: actived,
    selected: selected,
    openPanel: false,
    showPlaceholder: showPlaceholder
  };
}

var YearPicker = function (_ref) {
  (0, _inherits3['default'])(YearPicker, _ref);

  function YearPicker(props) {
    (0, _classCallCheck3['default'])(this, YearPicker);

    var _this = (0, _possibleConstructorReturn3['default'])(this, (YearPicker.__proto__ || Object.getPrototypeOf(YearPicker)).call(this, props));

    _this.onChangeYear = function (val) {
      var actived = _this.state.actived;

      var acp = new Date(actived);
      acp.setFullYear(val);

      _this.setState({
        actived: acp
      });
    };

    _this.onSelectYear = function (val) {
      if (_this.isDisabled(val)) return;
      var _this$props = _this.props,
          isFooterVisble = _this$props.isFooterVisble,
          onChange = _this$props.onChange,
          actived = _this.state.actived;

      var acp = new Date(actived);
      acp.setFullYear(val);

      if (!isFooterVisble) {
        _this.setState({
          value: acp,
          selected: acp,
          openPanel: false,
          showPlaceholder: false
        });
        onChange('' + val);
      }
    };

    _this.onClearInput = function (evt) {
      evt.stopPropagation();
      _this.props.onChange('');
    };

    _this.onConfirm = function () {
      var _this$props2 = _this.props,
          format = _this$props2.format,
          onChange = _this$props2.onChange,
          selected = _this.state.selected;


      var value = '';
      if (selected) {
        value = (0, _utils.formatDate)(selected, format);
      }

      _this.setState({
        value: value,
        openPanel: false,
        showPlaceholder: false
      });
      onChange(value);
    };

    _this.isDisabled = function (val) {
      var _this$props3 = _this.props,
          disabledDate = _this$props3.disabledDate,
          min = _this$props3.min,
          max = _this$props3.max;


      if (disabledDate && disabledDate(val)) return true;
      if (min && +val < +min) return true;
      if (max && +val > +max) return true;

      return false;
    };

    _this.togglePicker = function () {
      var _this$props4 = _this.props,
          onOpen = _this$props4.onOpen,
          onClose = _this$props4.onClose,
          disabled = _this$props4.disabled;

      var openPanel = !_this.state.openPanel;

      if (disabled) return;

      openPanel ? onOpen && onOpen() : onClose && onClose();
      _this.setState({
        openPanel: !_this.state.openPanel
      });
    };

    _this.state = extractStateFromProps(props);
    return _this;
  }

  (0, _createClass3['default'])(YearPicker, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(next) {
      var state = extractStateFromProps(next);
      this.setState(state);
    }
  }, {
    key: 'renderPicker',
    value: function renderPicker() {
      var _this2 = this;

      var state = this.state,
          props = this.props;


      var yearPicker = void 0;
      if (state.openPanel) {
        yearPicker = _react2['default'].createElement(
          _i18n.I18nReceiver,
          { componentName: 'TimePicker', defaultI18n: _default.TimePicker },
          function (i18n) {
            return _react2['default'].createElement(
              'div',
              { className: 'year-picker', ref: function ref(_ref2) {
                  return _this2.picker = _ref2;
                } },
              _react2['default'].createElement(_YearPanel2['default'], {
                actived: state.actived,
                selected: state.selected,
                onChange: _this2.onChangeYear,
                onSelect: _this2.onSelectYear,
                disabledDate: _this2.isDisabled,
                i18n: i18n
              }),
              props.needConfirm && _react2['default'].createElement(_PanelFooter2['default'], {
                buttonText: props.confirmText || i18n.confirm,
                linkText: i18n.current.year,
                linkCls: 'link--current',
                onClickLink: function onClickLink() {
                  return _this2.onSelectYear(_utils.CURRENT);
                },
                onClickButton: _this2.onConfirm
              })
            );
          }
        );
      }

      return yearPicker;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          disabled = _props.disabled,
          name = _props.name,
          placeholder = _props.placeholder,
          popPosition = _props.popPosition,
          prefix = _props.prefix,
          width = _props.width,
          _state = this.state,
          openPanel = _state.openPanel,
          showPlaceholder = _state.showPlaceholder,
          value = _state.value;


      var wrapperCls = prefix + '-datetime-picker ' + className;
      var inputCls = (0, _classnames2['default'])({
        'picker-input': true,
        'picker-input--filled': !showPlaceholder,
        'picker-input--disabled': disabled
      });
      var widthStyle = (0, _getWidth2['default'])(width);

      return _react2['default'].createElement(
        'div',
        { style: widthStyle, className: wrapperCls },
        _react2['default'].createElement(
          _popover2['default'],
          {
            cushion: 5,
            visible: openPanel,
            onVisibleChange: this.togglePicker,
            className: prefix + '-datetime-picker-popover ' + className + '-popover',
            position: _constants.popPositionMap[popPosition.toLowerCase()]
          },
          _react2['default'].createElement(
            _popover2['default'].Trigger.Click,
            null,
            _react2['default'].createElement(
              'div',
              { style: widthStyle, className: inputCls },
              _react2['default'].createElement(
                _i18n.I18nReceiver,
                { componentName: 'TimePicker', defaultI18n: _default.TimePicker },
                function (i18n) {
                  return _react2['default'].createElement(_input2['default'], {
                    name: name,
                    value: showPlaceholder ? placeholder || i18n.year : value,
                    onChange: _constants.noop,
                    disabled: disabled
                  });
                }
              ),
              _react2['default'].createElement('span', { className: 'zenticon zenticon-calendar-o' }),
              _react2['default'].createElement('span', {
                onClick: this.onClearInput,
                className: 'zenticon zenticon-close-circle'
              })
            )
          ),
          _react2['default'].createElement(
            _popover2['default'].Content,
            null,
            this.renderPicker()
          )
        )
      );
    }
  }]);
  return YearPicker;
}(_react.PureComponent || _react.Component);

YearPicker.propTypes = (0, _extends3['default'])({}, _constants.commonPropTypes);
YearPicker.defaultProps = (0, _extends3['default'])({}, _constants.commonProps, {
  placeholder: '',
  format: 'YYYY',
  needConfirm: false
});
exports['default'] = YearPicker;