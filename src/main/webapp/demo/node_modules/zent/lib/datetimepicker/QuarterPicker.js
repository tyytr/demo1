'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _isArray = require('lodash/isArray');

var _isArray2 = _interopRequireDefault(_isArray);

var _parseDate = require('zan-utils/date/parseDate');

var _parseDate2 = _interopRequireDefault(_parseDate);

var _input = require('../input');

var _input2 = _interopRequireDefault(_input);

var _popover = require('../popover');

var _popover2 = _interopRequireDefault(_popover);

var _getWidth = require('../utils/getWidth');

var _getWidth2 = _interopRequireDefault(_getWidth);

var _i18n = require('../i18n');

var _default = require('../i18n/default');

var _QuarterPanel = require('./quarter/QuarterPanel');

var _QuarterPanel2 = _interopRequireDefault(_QuarterPanel);

var _utils = require('./utils');

var _constants = require('./constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var quarterMonthMap = {
  0: 0,
  1: 3,
  2: 6,
  3: 9
};

function getQuarterLastDay(quarter, year) {
  var quarterLastDayMap = {
    0: [2, 31],
    1: [5, 30],
    2: [8, 30],
    3: [11, 31]
  };

  return new (Function.prototype.bind.apply(Date, [null].concat([year], (0, _toConsumableArray3['default'])(quarterLastDayMap[quarter]))))();
}

function extractStateFromProps(props) {
  var showPlaceholder = void 0;
  var selected = void 0;
  var actived = void 0;
  var format = props.format,
      value = props.value,
      defaultValue = props.defaultValue;

  var val = (0, _isArray2['default'])(value) ? value[0] : value;

  if (val) {
    var tmp = (0, _parseDate2['default'])(val, format);
    if (tmp) {
      showPlaceholder = false;
      selected = actived = tmp;
    } else {
      // eslint-disable-line
      showPlaceholder = true;
      actived = (0, _utils.dayStart)();
    }
  } else {
    showPlaceholder = true;
    if (defaultValue) {
      actived = (0, _parseDate2['default'])(defaultValue, format);
    } else {
      actived = (0, _utils.dayStart)();
    }
  }
  var quarter = void 0;
  if (selected) {
    quarter = (0, _utils.getQuarterFromDate)(selected);
  }

  return {
    value: quarter,
    actived: actived,
    selected: selected,
    openPanel: false,
    showPlaceholder: showPlaceholder
  };
}

var QuarterPicker = function (_ref) {
  (0, _inherits3['default'])(QuarterPicker, _ref);

  function QuarterPicker(props) {
    (0, _classCallCheck3['default'])(this, QuarterPicker);

    var _this = (0, _possibleConstructorReturn3['default'])(this, (QuarterPicker.__proto__ || Object.getPrototypeOf(QuarterPicker)).call(this, props));

    _this.onChangeQuarter = function (val) {
      _this.setState({
        actived: val
      });
    };

    _this.onSelectQuarter = function (quarter) {
      var actived = _this.state.actived;
      var onChange = _this.props.onChange;

      var year = actived.getFullYear();
      var month = quarterMonthMap[quarter];

      if (_this.isDisabled(quarter)) return;

      var begin = new Date(year, month, 1);
      var end = getQuarterLastDay(quarter, year);
      var ret = [(0, _utils.dayStart)(begin), (0, _utils.dayEnd)(end)];

      _this.setState({
        value: quarter,
        selected: begin,
        actived: begin,
        openPanel: false,
        showPlaceholder: false
      });

      onChange(ret);
    };

    _this.onClearInput = function (evt) {
      evt.stopPropagation();
      _this.props.onChange([]);
    };

    _this.isDisabled = function (quarter) {
      var disabledDate = _this.props.disabledDate;
      var actived = _this.state.actived;

      var year = actived.getFullYear();
      var month = quarterMonthMap[quarter];
      var begin = new Date(year, month, 1);
      var end = getQuarterLastDay(quarter, year);
      var ret = [(0, _utils.dayStart)(begin), (0, _utils.dayEnd)(end)];

      if (disabledDate) return disabledDate(ret);

      return false;
    };

    _this.togglePicker = function () {
      var disabled = _this.props.disabled;

      var openPanel = !_this.state.openPanel;

      if (disabled) return;

      _this.setState({
        openPanel: openPanel
      });
    };

    _this.state = extractStateFromProps(props);
    return _this;
  }

  (0, _createClass3['default'])(QuarterPicker, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(next) {
      var state = extractStateFromProps(next);
      this.setState(state);
    }
  }, {
    key: 'renderPicker',
    value: function renderPicker(i18n) {
      var _this2 = this;

      var _state = this.state,
          openPanel = _state.openPanel,
          actived = _state.actived,
          selected = _state.selected;

      var quarterPicker = void 0;
      if (openPanel) {
        quarterPicker = _react2['default'].createElement(
          'div',
          { className: 'quarter-picker', ref: function ref(_ref2) {
              return _this2.picker = _ref2;
            } },
          _react2['default'].createElement(_QuarterPanel2['default'], {
            actived: actived,
            selected: selected,
            onChange: this.onChangeQuarter,
            onSelect: this.onSelectQuarter,
            disabledDate: this.isDisabled,
            i18n: i18n
          })
        );
      }

      return quarterPicker;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          className = _props.className,
          disabled = _props.disabled,
          name = _props.name,
          placeholder = _props.placeholder,
          popPosition = _props.popPosition,
          prefix = _props.prefix,
          width = _props.width,
          _state2 = this.state,
          openPanel = _state2.openPanel,
          selected = _state2.selected,
          showPlaceholder = _state2.showPlaceholder,
          value = _state2.value;

      var wrapperCls = prefix + '-datetime-picker ' + className;
      var inputCls = (0, _classnames2['default'])({
        'picker-input': true,
        'picker-input--filled': !showPlaceholder,
        'picker-input--disabled': disabled
      });
      var widthStyle = (0, _getWidth2['default'])(width);

      return _react2['default'].createElement(
        'div',
        { style: widthStyle, className: wrapperCls },
        _react2['default'].createElement(
          _i18n.I18nReceiver,
          { componentName: 'TimePicker', defaultI18n: _default.TimePicker },
          function (i18n) {
            var inputVal = void 0;
            if (selected) {
              inputVal = i18n.mark === 'zh-CN' ? selected.getFullYear() + '\u5E74' + i18n.panel.quarterNames[value] : i18n.panel.quarterNames[value] + ' of ' + selected.getFullYear();
            }
            var placeholderText = placeholder || i18n.quarter;
            return _react2['default'].createElement(
              _popover2['default'],
              {
                cushion: 5,
                visible: openPanel,
                onVisibleChange: _this3.togglePicker,
                className: prefix + '-datetime-picker-popover ' + className + '-popover',
                position: _constants.popPositionMap[popPosition.toLowerCase()]
              },
              _react2['default'].createElement(
                _popover2['default'].Trigger.Click,
                null,
                _react2['default'].createElement(
                  'div',
                  { style: widthStyle, className: inputCls },
                  _react2['default'].createElement(_input2['default'], {
                    name: name,
                    value: showPlaceholder ? placeholderText : inputVal,
                    onChange: _constants.noop,
                    disabled: disabled
                  }),
                  _react2['default'].createElement('span', { className: 'zenticon zenticon-calendar-o' }),
                  _react2['default'].createElement('span', {
                    onClick: _this3.onClearInput,
                    className: 'zenticon zenticon-close-circle'
                  })
                )
              ),
              _react2['default'].createElement(
                _popover2['default'].Content,
                null,
                _this3.renderPicker(i18n)
              )
            );
          }
        )
      );
    }
  }]);
  return QuarterPicker;
}(_react.PureComponent || _react.Component);

QuarterPicker.propTypes = (0, _extends3['default'])({}, _constants.commonPropTypes);
QuarterPicker.defaultProps = (0, _extends3['default'])({}, _constants.commonProps, {
  placeholder: '',
  format: 'YYYY-MM-DD'
});
exports['default'] = QuarterPicker;