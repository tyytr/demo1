'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _utils = require('../utils');

var _DatePanelBody = require('./DatePanelBody');

var _DatePanelBody2 = _interopRequireDefault(_DatePanelBody);

var _MonthPanel = require('../month/MonthPanel');

var _MonthPanel2 = _interopRequireDefault(_MonthPanel);

var _TimePanel = require('../time/TimePanel');

var _TimePanel2 = _interopRequireDefault(_TimePanel);

var _PanelHeader = require('../common/PanelHeader');

var _PanelHeader2 = _interopRequireDefault(_PanelHeader);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var DatePanel = function (_ref) {
  (0, _inherits3['default'])(DatePanel, _ref);

  function DatePanel() {
    var _ref2;

    var _temp, _this, _ret;

    (0, _classCallCheck3['default'])(this, DatePanel);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3['default'])(this, (_ref2 = DatePanel.__proto__ || Object.getPrototypeOf(DatePanel)).call.apply(_ref2, [this].concat(args))), _this), _this.state = {
      showMonth: false
    }, _this.showMonth = function () {
      _this.setState({
        showMonth: true
      });
    }, _this.onSelectMonth = function (val, hide) {
      _this.props.onChange(val);
      _this.setState({
        showMonth: hide || false
      });
    }, _temp), (0, _possibleConstructorReturn3['default'])(_this, _ret);
  }

  /*
   * 在 monthPicker 的时候选择年不隐藏 monthPanel.
   */


  (0, _createClass3['default'])(DatePanel, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          actived = _props.actived,
          disabledDate = _props.disabledDate,
          i18n = _props.i18n,
          onHover = _props.onHover,
          onNext = _props.onNext,
          onPrev = _props.onPrev,
          onSelect = _props.onSelect,
          range = _props.range,
          selected = _props.selected,
          showNext = _props.showNext,
          showPrev = _props.showPrev,
          showTime = _props.showTime,
          showMonth = this.state.showMonth;


      var monthPanel = void 0;
      var timePanel = void 0;
      if (showMonth) {
        monthPanel = _react2['default'].createElement(_MonthPanel2['default'], {
          actived: actived,
          selected: selected,
          onChange: this.onSelectMonth,
          onSelect: this.onSelectMonth,
          i18n: i18n
        });
      }
      if (showTime) {
        timePanel = _react2['default'].createElement(_TimePanel2['default'], (0, _extends3['default'])({}, showTime, { i18n: i18n }));
      }

      return _react2['default'].createElement(
        'div',
        { className: 'date-panel' },
        _react2['default'].createElement(_PanelHeader2['default'], {
          title: (0, _utils.formatDate)(actived, i18n.panel.titleFormat),
          onClickTitle: this.showMonth,
          prev: onPrev,
          next: onNext,
          showPrev: showPrev,
          showNext: showNext
        }),
        _react2['default'].createElement(_DatePanelBody2['default'], {
          actived: actived,
          range: range,
          selected: selected,
          disabledDate: disabledDate,
          onSelect: onSelect,
          onHover: onHover,
          i18n: i18n
        }),
        showMonth && monthPanel,
        showTime && timePanel
      );
    }
  }]);
  return DatePanel;
}(_react.PureComponent || _react.Component);

DatePanel.defaultProps = {
  showPrev: true,
  showNext: true
};
exports['default'] = DatePanel;