(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['module', 'exports'], factory);
  } else if (typeof exports !== "undefined") {
    factory(module, exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod, mod.exports);
    global.unescape = mod.exports;
  }
})(this, function (module, exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  /**
   * 字符串的反转义,将`&amp;`, `&lt;`,  `&gt;`, `&quot;`, `&#x27;`替换为转义前的符号
   * @memberof module:string
   * @param {string} text 处理前字符串
   * @return {string} 处理后的字符串
   * @runkit true
   * @example
   * const unescape = require('zan-utils/string/unescape');
   * unescape('&lt;hello&gt;')
   * // '<hello>'
   */

  function unescape(text) {
    var _unescape = {
      '&amp;': '&',
      '&lt;': '<',
      '&gt;': '>',
      '&quot;': '"',
      '&#x27;': "'"
    };

    var unescapeExpr = /(&amp;|&lt;|&gt;|&quot;|&#x27;)/g;
    return ('' + text).replace(unescapeExpr, function (match) {
      return _unescape[match];
    });
  }

  exports['default'] = unescape;
  module.exports = exports['default'];
});