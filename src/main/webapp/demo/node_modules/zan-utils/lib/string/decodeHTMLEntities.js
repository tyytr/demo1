(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['module', 'exports'], factory);
  } else if (typeof exports !== "undefined") {
    factory(module, exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod, mod.exports);
    global.decodeHTMLEntities = mod.exports;
  }
})(this, function (module, exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  /**
   * 返回HTML里的文字内容
   * @memberof module:string
   * @param {string} str html字符串
   * @return {string} 处理后的文字
   * @example
   * const decodeHTMLEntities = require('zan-utils/string/decodeHTMLEntities');
   * decodeHTMLEntities('<li>111<span>222</span></li>')
   * // '111222'
   */
  function decodeHTMLEntities(str) {
    var element = document.createElement('div');
    if (str && typeof str === 'string') {
      // strip script/html tags
      str = str.replace(/<script[^>]*>([\S\s]*?)<\/script>/gmi, '');
      str = str.replace(/<\/?\w(?:[^"'>]|"[^"]*"|'[^']*')*>/gmi, '');
      element.innerHTML = str;
      str = element.textContent;
      element.textContent = '';
    }
    return str;
  }
  exports['default'] = decodeHTMLEntities;
  module.exports = exports['default'];
});