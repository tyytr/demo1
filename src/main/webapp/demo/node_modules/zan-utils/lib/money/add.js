(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['module', 'exports', './format'], factory);
  } else if (typeof exports !== "undefined") {
    factory(module, exports, require('./format'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod, mod.exports, global.format);
    global.add = mod.exports;
  }
})(this, function (module, exports, _format) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _format2 = _interopRequireDefault(_format);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  /**
   * 计算金钱的加法，返回格式化后的格式
   * @memberof module:money
   * @param {number} a 参数a
   * @param {number} b 参数b
   * @param {boolean} cent 是否是分
   * @returns {string}
   * @runkit true
   * @example
   * const add = require('zan-utils/money/add');
   * add(1000000, 200));
   * //'10,002.00'
   */
  function add(a, b) {
    var cent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

    a = parseFloat(a, 10);
    b = parseFloat(b, 10);
    return (0, _format2['default'])(a + b, cent);
  }
  exports['default'] = add;
  module.exports = exports['default'];
});