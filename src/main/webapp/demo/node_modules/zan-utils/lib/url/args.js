(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['module', 'exports'], factory);
  } else if (typeof exports !== "undefined") {
    factory(module, exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod, mod.exports);
    global.args = mod.exports;
  }
})(this, function (module, exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  function getParameterByName(name, url) {
    name = name.replace(/[[]/, '\\[').replace(/[]]/, '\\]'); // eslint-disable-line
    url = url ? '?' + url.split('#')[0].split('?')[1] : window.location.search;
    var results = RegExp('[?&]' + name + '=([^&#]*)').exec(url);
    return results ? decodeURIComponent(results[1].replace(/\+/g, ' ')) : '';
  }

  function removeParameter(url, parameter) {
    var urlparts = url.split('?');
    if (urlparts.length >= 2) {
      var prefix = encodeURIComponent(parameter) + '=';
      var pars = urlparts[1].split(/[&;]/g);

      // reverse iteration as may be destructive
      for (var i = pars.length; i-- > 0;) {
        // idiom for string.startsWith
        if (pars[i].lastIndexOf(prefix, 0) !== -1) {
          pars.splice(i, 1);
        }
      }

      url = urlparts[0] + '?' + pars.join('&');
      return url;
    }
    return url;
  }

  var obj2UrlString = function obj2UrlString(obj) {
    var string = '';
    for (var key in obj) {
      //eslint-disable-line
      if (obj[key] === '') {
        continue;
      }
      string += key.trim() + '=' + obj[key] + '&';
    }
    return string ? '?' + string.slice(0, string.length - 1) : '';
  };

  function addParameter(url, obj) {
    if (!url || url.length === 0 || url.trim().indexOf('javascript') === 0) {
      return '';
    }
    var hashArray = url.split('#');
    var paraArray = hashArray[0].split('?');
    var para = {};
    // 原有参数放入para对象
    if (paraArray[1]) {
      paraArray[1].split('&').forEach(function (item) {
        var tempArr = void 0;
        tempArr = item.split('=');
        // 参数值中有等号，做处理
        para[tempArr[0]] = tempArr.slice(1).join('=');
      });
    }
    // 将需要添加的参数放入para对象
    Object.keys(obj).forEach(function (key) {
      para[key.trim()] = encodeURIComponent(obj[key]);
    });
    // 重组url
    url = paraArray[0] + obj2UrlString(para);

    return hashArray[1] ? url += '#' + hashArray[1] : url;
  }
  /**
   * @memberof module:url
   * @name args
   * @description
   * ### 对URL参数的操作
   * 1. **args.get**: 获取url中指定的键值, [url]可选参数
   *
   *  - 参数1：**name(string)**，需要获取的参数名
   *  - 参数2：**url(string)**，指定的URL
   *  - 返回值：参数名的值
   *
   *  ```js
   *  args.get('b', 'http://www.youzan.com?a=2&b=3');
   *  // '3'
   *  ```
   * 2. **args.remove**: 移除指定url中的键值对
   *
   *  - 参数1：**url(string)** 指定的URL
   *  - 参数2：**parameter(string)** 需要移除的参数名
   *  - 返回值：移除后的URL
   *
   *  ```js
   *  args.remove('http://www.youzan.com?a=2&b=3', 'b'); //'http://www.youzan.com?a=2'
   *  args.remove('http://www.youzan.com?b=3', 'b'); //'http://www.youzan.com?'
   *  ```
   * 3. **args.add**: 给指定url添加指定的键值对
   *
   *  - 参数1：**url(string)** 指定的URL
   *  - 参数2：**obj(object)** 指定的键值对
   *  - 返回值： 添加后的URL
   *
   *  ```js
   *  args.add('http://www.youzan.com', { a: 2 }); //'http://www.youzan.com?a=2'
   *  args.add('http://www.youzan.com?a=2', { b: 3 }); //'http://www.youzan.com?a=2&b=3'
   *  args.add('http://www.youzan.com?a=', { b: 3 }); //'http://www.youzan.com?b=3'
   *  ```
  */
  var args = {
    get: getParameterByName,
    remove: removeParameter,
    add: addParameter
  };
  exports['default'] = args;
  module.exports = exports['default'];
});