/**
* @memberof module:browser
* @name ua
* @example
* import UA from 'zan-utils/browser/ua';
* @description
 * ##### 从服务器获取设备类型及设备的版本信息
 * **使用方法：全局引用、直接使用**
 *
 * 1、判断设备是否为iOS
 * `UA.isIOS()`
 *
 * 2、获取iOS的版本号
 * `UA.getIOSVersion()`
 *
 * 3、判断设备是否为Android
 * `UA.isAndroid()`
 *
 * 4、判断设备是否为老版本Android(2.2/2.3)
 *  `UA.isAndroidOld()`
 *
 * 5、判断是否在微信内
 *  `UA.isWeixin()`
 *
 * 6、判断设备是否为iPad
 * `UA.isIPad()`
 *
 * 7、判断设备是否为移动设备
 * `UA.isMobile()`
 *
 * 8、判断浏览器是否为Safari
 * `UA.isSafari()`
 *
 * 9、判断App是否为微小店
 * `UA.isWxd()`
 *
 * 10、获取App的版本号(特指微商城App和微小店App)
 * `UA.getPlatformVersion()`
 *
 * 11、判断App是否为微商城
 * `UA.isWsc()`
 *
 * 12、判断App是否为有赞批发
 * `UA.isPf()`
 *
 * 13、判断是否在QQ内
 *  `UA.isQQ()`
 *
 */
/* global _global */

let platform = '';
if (typeof window !== 'undefined') {
  platform = navigator.userAgent.toLowerCase();
}

const ua = {

  isIOS() {
    return window._global.mobile_system === 'ios';
  },

  getIOSVersion() {
    return parseFloat(
              (`${(/CPU.*OS ([0-9_]{1,5})|(CPU like).*AppleWebKit.*Mobile/i.exec(navigator.userAgent) || [0, ''])[1]}`)
              .replace('undefined', '3_2').replace('_', '.').replace('_', '')
          ) || false;
  },

  isAndroid() {
    return window._global.mobile_system === 'android';
  },

  isAndroidOld() {
    return (/android 2.3/gi).test(platform) || (/android 2.2/gi).test(platform);
  },

  getAndroidVersion() {
    const match = platform.match(/android\s([0-9\.]*)/);
    return match ? match[1] : false;
  },

  isWeixin() {
    return window._global.platform === 'weixin';
  },

  isQQ() {
    return window._global.platform === 'qq';
  },

  isIPad() {
    return (/ipad/gi).test(platform);
  },

  isMobile() {
    return window._global.is_mobile;
  },

  isSafari() {
    return (/safari/gi).test(platform) && !(/chrome/gi).test(platform);
  },

  getSafariVersion() {
    const pattern = /safari\/(\S*)/i;
    if (pattern.test(platform)) {
      return platform.match(pattern)[1];
    }
    return '0';
  },

  isChrome() {
    return (/chrome/gi).test(platform);
  },

  getChromeVersion() {
    const pattern = /chrome\/(\S*)/i;
    if (pattern.test(platform)) {
      return platform.match(pattern)[1];
    }
    return '0';
  },

  isUC() {
    return (/ucbrowser/gi).test(platform);
  },

  getUCVersion() {
    const pattern = /ucbrowser\/(\S*)/i;

    if (pattern.test(platform)) {
      return platform.match(pattern)[1];
    }
    return '0';
  },

  isWxd() {
    return _global.platform === 'youzanwxd';
  },

  isWsc() {
    return _global.platform === 'youzanwsc';
  },

  isPf() {
    return _global.platform === 'younipf';
  },

  getPlatformVersion() {
    return _global.platform_version;
  },

  getPlatform() {
    return _global.platform;
  }
};

export default ua;
declare module 'zan-utils/browser/ua' {
  const ua: {
    isIOS(): boolean;
    getIOSVersion(): number | false;
    isAndroid(): boolean;
    isAndroidOld(): boolean;
    getAndroidVersion(): string | false;
    isWeixin(): boolean;
    isQQ(): boolean;
    isIPad(): boolean;
    isMobile(): any;
    isSafari(): boolean;
    getSafariVersion(): string;
    isChrome(): boolean;
    getChromeVersion(): string;
    isUC(): boolean;
    getUCVersion(): string;
    isWxd(): boolean;
    isWsc(): boolean;
    isPf(): boolean;
    getPlatformVersion(): any;
    getPlatform(): any;
  };
  export default ua;
}
