(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['module', 'exports'], factory);
  } else if (typeof exports !== "undefined") {
    factory(module, exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod, mod.exports);
    global.ua = mod.exports;
  }
})(this, function (module, exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  /**
  * @memberof module:browser
  * @name ua
  * @example
  * import UA from 'zan-utils/browser/ua';
  * @description
   * ##### 从服务器获取设备类型及设备的版本信息
   * **使用方法：全局引用、直接使用**
   *
   * 1、判断设备是否为iOS
   * `UA.isIOS()`
   *
   * 2、获取iOS的版本号
   * `UA.getIOSVersion()`
   *
   * 3、判断设备是否为Android
   * `UA.isAndroid()`
   *
   * 4、判断设备是否为老版本Android(2.2/2.3)
   *  `UA.isAndroidOld()`
   *
   * 5、判断是否在微信内
   *  `UA.isWeixin()`
   *
   * 6、判断设备是否为iPad
   * `UA.isIPad()`
   *
   * 7、判断设备是否为移动设备
   * `UA.isMobile()`
   *
   * 8、判断浏览器是否为Safari
   * `UA.isSafari()`
   *
   * 9、判断App是否为微小店
   * `UA.isWxd()`
   *
   * 10、获取App的版本号(特指微商城App和微小店App)
   * `UA.getPlatformVersion()`
   *
   * 11、判断App是否为微商城
   * `UA.isWsc()`
   *
   * 12、判断App是否为有赞批发
   * `UA.isPf()`
   *
   * 13、判断是否在QQ内
   *  `UA.isQQ()`
   *
   */
  /* global _global */

  var platform = '';
  if (typeof window !== 'undefined') {
    platform = navigator.userAgent.toLowerCase();
  }

  var ua = {
    isIOS: function isIOS() {
      return window._global.mobile_system === 'ios';
    },
    getIOSVersion: function getIOSVersion() {
      return parseFloat(('' + (/CPU.*OS ([0-9_]{1,5})|(CPU like).*AppleWebKit.*Mobile/i.exec(navigator.userAgent) || [0, ''])[1]).replace('undefined', '3_2').replace('_', '.').replace('_', '')) || false;
    },
    isAndroid: function isAndroid() {
      return window._global.mobile_system === 'android';
    },
    isAndroidOld: function isAndroidOld() {
      return (/android 2.3/gi.test(platform) || /android 2.2/gi.test(platform)
      );
    },
    getAndroidVersion: function getAndroidVersion() {
      var match = platform.match(/android\s([0-9\.]*)/);
      return match ? match[1] : false;
    },
    isWeixin: function isWeixin() {
      return window._global.platform === 'weixin';
    },
    isQQ: function isQQ() {
      return window._global.platform === 'qq';
    },
    isIPad: function isIPad() {
      return (/ipad/gi.test(platform)
      );
    },
    isMobile: function isMobile() {
      return window._global.is_mobile;
    },
    isSafari: function isSafari() {
      return (/safari/gi.test(platform) && !/chrome/gi.test(platform)
      );
    },
    getSafariVersion: function getSafariVersion() {
      var pattern = /safari\/(\S*)/i;
      if (pattern.test(platform)) {
        return platform.match(pattern)[1];
      }
      return '0';
    },
    isChrome: function isChrome() {
      return (/chrome/gi.test(platform)
      );
    },
    getChromeVersion: function getChromeVersion() {
      var pattern = /chrome\/(\S*)/i;
      if (pattern.test(platform)) {
        return platform.match(pattern)[1];
      }
      return '0';
    },
    isUC: function isUC() {
      return (/ucbrowser/gi.test(platform)
      );
    },
    getUCVersion: function getUCVersion() {
      var pattern = /ucbrowser\/(\S*)/i;

      if (pattern.test(platform)) {
        return platform.match(pattern)[1];
      }
      return '0';
    },
    isWxd: function isWxd() {
      return _global.platform === 'youzanwxd';
    },
    isWsc: function isWsc() {
      return _global.platform === 'youzanwsc';
    },
    isPf: function isPf() {
      return _global.platform === 'younipf';
    },
    getPlatformVersion: function getPlatformVersion() {
      return _global.platform_version;
    },
    getPlatform: function getPlatform() {
      return _global.platform;
    }
  };

  exports['default'] = ua;
  module.exports = exports['default'];
});