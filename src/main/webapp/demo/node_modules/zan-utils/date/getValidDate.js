(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['module', 'exports', '../validate/date'], factory);
  } else if (typeof exports !== "undefined") {
    factory(module, exports, require('../validate/date'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod, mod.exports, global.date);
    global.getValidDate = mod.exports;
  }
})(this, function (module, exports, _date) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _date2 = _interopRequireDefault(_date);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  /**
   * 将一个字符串、数字转化为 Date 的实例
   * @memberof module:date
   * @param {string|Date|number} date 需要转换的值
   * @return {date} Date 的实例
   * @runkit true
   * @example
   * const getValidDate = require('zan-utils/date/getValidDate');
   * let date = getValidDate(new Date());
   * date instanceof Date;// true
   * date = getValidDate(1496800160058);
   * date instanceof Date;// true
   */
  function getValidDate(date) {
    date = date || new Date();
    if (date instanceof Date) return date;
    if (typeof date === 'number') {
      if ((0, _date2['default'])(date)) date = new Date(date);
    }
    if (typeof date === 'string') {
      if (!(0, _date2['default'])(date)) {
        date = date.replace(/-/g, '/');
      }
      if ((0, _date2['default'])(date)) date = new Date(date);
    }

    return date;
  }
  exports['default'] = getValidDate;
  module.exports = exports['default'];
});