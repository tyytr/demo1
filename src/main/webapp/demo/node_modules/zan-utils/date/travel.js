(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['module', 'exports'], factory);
  } else if (typeof exports !== "undefined") {
    factory(module, exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod, mod.exports);
    global.travel = mod.exports;
  }
})(this, function (module, exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  /**
   * 时间穿越
   * @memberof module:date
   * @param {number} num 穿越的范围，负数表示向后穿越，正数向前穿越
   * @param {date} date 基础时间点
   * @param {enum} type 穿越的类型，day、month、year
   * @return {date} 穿越后的时间
   * @runkit true
   * @example
   * const travel = require('zan-utils/date/travel');
   * const formatDate = require('zan-utils/date/formatDate');
   * formatDate(travel(-10), 'YYYY-MM-DD');
   * // 穿越到10天前
   * formatDate(travel(15), 'YYYY-MM-DD');
   * // 穿越到15天后
   * formatDate(travel(-1, new Date(), 'month'), 'YYYY-MM-DD');
   * // 穿越到1个月前
   * formatDate(travel(-1, new Date(), 'year'), 'YYYY-MM-DD');
   * // 穿越到1年前的今天
   */
  function travel(num) {
    var date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Date();
    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'day';

    var year = date.getFullYear();
    var month = date.getMonth();
    var day = date.getDate();
    return new Date(type === 'year' ? year + num : year, type === 'month' ? month + num : month, type === 'day' ? day + num : day);
  }
  exports['default'] = travel;
  module.exports = exports['default'];
});