(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['module', 'exports', './getValidDate', './formatDate'], factory);
  } else if (typeof exports !== "undefined") {
    factory(module, exports, require('./getValidDate'), require('./formatDate'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod, mod.exports, global.getValidDate, global.formatDate);
    global.makeDateStr = mod.exports;
  }
})(this, function (module, exports, _getValidDate, _formatDate) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _getValidDate2 = _interopRequireDefault(_getValidDate);

  var _formatDate2 = _interopRequireDefault(_formatDate);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  /**
   * 获得 YYYY-MM-DD 格式的日期字符串的快捷方法
   * @memberof module:date
   * @param {string|Date|number} date 需要格式化的字符串，兼容字符串、数字和 Date 实例
   * @param {string} mask 解析的格式，默认为 'YYYY-MM-DD'，方便日常开发
   * @returns {string} 格式化后的日期字符串
   * @runkit true
   * @example
   * const makeDateStr = require('zan-utils/date/makeDateStr');
   * makeDateStr(new Date());
   * // '2017-06-06'
   */
  function makeDateStr(date) {
    var mask = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'YYYY-MM-DD';

    date = (0, _getValidDate2['default'])(date);
    return (0, _formatDate2['default'])(date, mask);
  }
  exports['default'] = makeDateStr;
  module.exports = exports['default'];
});